# Generated by Django 4.2.7 on 2025-07-14 21:34

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Comprobante",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo_comprobante",
                    models.CharField(
                        choices=[
                            ("01", "Factura"),
                            ("03", "Boleta"),
                            ("07", "Nota de Crédito"),
                            ("08", "Nota de Débito"),
                        ],
                        max_length=2,
                    ),
                ),
                ("ruc_emisor", models.CharField(max_length=11)),
                ("serie", models.CharField(max_length=4)),
                ("numero", models.CharField(max_length=8)),
                ("ruc_cliente", models.CharField(blank=True, max_length=11, null=True)),
                ("nombre_cliente", models.CharField(max_length=200)),
                ("direccion_cliente", models.TextField(blank=True, null=True)),
                (
                    "total_gravado",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                (
                    "total_igv",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                ("total", models.DecimalField(decimal_places=2, max_digits=15)),
                ("xml_file", models.FileField(blank=True, null=True, upload_to="xml/")),
                ("zip_file", models.FileField(blank=True, null=True, upload_to="zip/")),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("PENDIENTE", "Pendiente"),
                            ("VALIDADO", "Validado"),
                            ("GENERADO", "Generado"),
                            ("ERROR", "Error"),
                            ("ERROR_VALIDACION", "Error de Validación"),
                            ("ENVIADO", "Enviado a SUNAT"),
                            ("ENVIADO_PENDIENTE", "Enviado - Pendiente de Respuesta"),
                            ("PROCESANDO", "Procesando en SUNAT"),
                            ("ACEPTADO", "Aceptado por SUNAT"),
                            ("RECHAZADO", "Rechazado por SUNAT"),
                        ],
                        default="PENDIENTE",
                        max_length=20,
                    ),
                ),
                ("errores", models.TextField(blank=True, null=True)),
                (
                    "fecha_creacion",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("fecha_actualizacion", models.DateTimeField(auto_now=True)),
                (
                    "ticket_sunat",
                    models.CharField(
                        blank=True,
                        help_text="Ticket devuelto por SUNAT para consultas",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "cdr_zip_path",
                    models.CharField(
                        blank=True,
                        help_text="Ruta del archivo ZIP del CDR",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "cdr_xml_path",
                    models.CharField(
                        blank=True,
                        help_text="Ruta del archivo XML del CDR",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "fecha_envio_sunat",
                    models.DateTimeField(
                        blank=True, help_text="Fecha de envío a SUNAT", null=True
                    ),
                ),
                (
                    "fecha_respuesta_sunat",
                    models.DateTimeField(
                        blank=True, help_text="Fecha de respuesta de SUNAT", null=True
                    ),
                ),
            ],
            options={
                "verbose_name": "Comprobante Electrónico",
                "verbose_name_plural": "Comprobantes Electrónicos",
                "db_table": "comprobantes",
            },
        ),
        migrations.CreateModel(
            name="SUNATConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("ruc_emisor", models.CharField(max_length=11)),
                ("usuario_sunat", models.CharField(max_length=50)),
                ("password_sunat", models.CharField(max_length=100)),
                ("environment", models.CharField(default="beta", max_length=20)),
                (
                    "beta_url",
                    models.URLField(
                        default="https://e-beta.sunat.gob.pe/ol-ti-itcpfegem-beta/billService"
                    ),
                ),
                (
                    "production_url",
                    models.URLField(
                        default="https://e-factura.sunat.gob.pe/ol-ti-itcpfegem/billService"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                "verbose_name": "Configuración SUNAT",
                "verbose_name_plural": "Configuraciones SUNAT",
                "db_table": "sunat_configurations",
            },
        ),
        migrations.CreateModel(
            name="SUNATResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("soap_method", models.CharField(max_length=20)),
                ("success", models.BooleanField(default=False)),
                ("response_data", models.TextField(blank=True, null=True)),
                ("soap_response", models.TextField(blank=True, null=True)),
                ("ticket", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "response_code",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("response_description", models.TextField(blank=True, null=True)),
                (
                    "cdr_zip_path",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "cdr_xml_path",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "fecha_envio",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "comprobante",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sunat_responses",
                        to="comprobantes.comprobante",
                    ),
                ),
            ],
            options={
                "verbose_name": "Respuesta SUNAT",
                "verbose_name_plural": "Respuestas SUNAT",
                "db_table": "sunat_responses",
                "ordering": ["-fecha_envio"],
            },
        ),
        migrations.CreateModel(
            name="SUNATLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("level", models.CharField(max_length=10)),
                ("operation", models.CharField(max_length=50)),
                ("message", models.TextField()),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "comprobante",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sunat_logs",
                        to="comprobantes.comprobante",
                    ),
                ),
            ],
            options={
                "verbose_name": "Log SUNAT",
                "verbose_name_plural": "Logs SUNAT",
                "db_table": "sunat_logs",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="DetalleComprobante",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("descripcion", models.CharField(max_length=500)),
                ("cantidad", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "precio_unitario",
                    models.DecimalField(decimal_places=2, max_digits=15),
                ),
                ("subtotal", models.DecimalField(decimal_places=2, max_digits=15)),
                (
                    "comprobante",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="detalles",
                        to="comprobantes.comprobante",
                    ),
                ),
            ],
            options={
                "verbose_name": "Detalle de Comprobante",
                "verbose_name_plural": "Detalles de Comprobante",
                "db_table": "detalles_comprobante",
            },
        ),
    ]
